generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Parent {
  id          Int       @id @default(autoincrement())
  email       String    @unique @map("email")
  username    String    @unique @map("username")
  name        String    @map("name")
  phoneNumber String    @map("phone_number")
  password    String    @map("password")
  reminder    Boolean
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime? @updatedAt @map("updated_at")
  deletedAt   DateTime? @map("deleted_at")

  // references (prisma level only)
  parentToChild Child[] @relation("ReferParentToChild")

  @@map("Parents")
}

model Child {
  id        Int       @id @default(autoincrement())
  name      String
  birthDate DateTime  @map("birth_date")
  height    Int
  weight    Int
  parentId  Int       @map("parent_id")
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  // references (prisma level only)
  childToChildFood ChildFood[] @relation("ReferChildToChildFood")

  // relational fields
  childFromParent Parent @relation("ReferParentToChild", fields: [parentId], references: [id])

  @@map("Childs")
}

model FoodType {
  id   Int    @id @default(autoincrement())
  name String

  // references (prisma level only)
  foodTypeToFood Food[] @relation("ReferFoodTypeToFood")

  @@map("FoodTypes")
}

model Food {
  id           Int    @id @default(autoincrement())
  name         String
  water        Int
  energy       Int
  carbohydrate Int
  protein      Int
  fat          Int
  fibre        Int
  foodTypeId   Int    @map("food_type_id")

  // references (prisma level only)
  foodToChildFood ChildFood[] @relation("ReferFoodToChildFood")

  // relational fields
  foodFromFoodType FoodType @relation("ReferFoodTypeToFood", fields: [foodTypeId], references: [id])

  @@map("Foods")
}

model ChildFood {
  id       Int      @id @default(autoincrement())
  mealTime DateTime @map("meal_time")
  amount   Int
  foodId   Int      @map("food_id")
  childId  Int      @map("child_id")

  // relational fields
  childFoodFromFood  Food  @relation("ReferFoodToChildFood", fields: [foodId], references: [id])
  childFoodFromChild Child @relation("ReferChildToChildFood", fields: [childId], references: [id])

  @@map("ChildFoods")
}

model DailyFood {
  id           Int @id @default(autoincrement())
  water        Int
  energy       Int
  carbohydrate Int
  protein      Int
  fat          Int
  fibre        Int
  minAge       Int @map("min_age")
  maxAge       Int @map("max_age")

  @@map("DailyFoods")
}
